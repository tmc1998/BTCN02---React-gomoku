{"version":3,"sources":["index.js"],"names":["Square","props","className","isWin","onClick","value","Board","i","this","winSquares","includes","key","squares","n","table","push","renderSquare","rows","renderRow","React","Component","Game","state","history","Array","column","fill","stepNumber","xIsNext","slice","length","locations","row","obj","Math","floor","calculateWinner","setState","concat","location","isAscending","step","status","current","winner","moves","map","move","desc","jumpTo","line","handleClick","sortHistory","reverse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d3311deb.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nconst column = 20;\r\nconst row = 20;\r\n\r\nfunction Square(props) {\r\n  return (\r\n    <button className={\"square \" + (props.isWin ? \"squareWin\": null)}\r\n     onClick={props.onClick}>\r\n      {props.value}\r\n    </button>\r\n  );\r\n}\r\n  \r\nclass Board extends React.Component {\r\n\r\n\r\n  // render o vuong\r\n  renderSquare(i) {\r\n    return (\r\n      <Square \r\n        isWin = {this.props.winSquares.includes(i)}\r\n        key = {\"square \" + i} \r\n        value = {this.props.squares[i]}\r\n        onClick = {() => this.props.onClick(i)}\r\n      />\r\n    ); \r\n  }\r\n  \r\n  // render cac o vao hang\r\n  renderRow(n) {\r\n    const squares = [];\r\n    const table = n * column;\r\n    for (let i = 0; i < column; i++)\r\n    {\r\n      squares.push(this.renderSquare(table + i))\r\n    }\r\n    return (\r\n      <div className = \"board-row\">\r\n          {squares}\r\n      </div>\r\n    )\r\n  }  \r\n\r\n  // render cac hang vao table\r\n  render() {\r\n    const rows = [];\r\n    for (let i = 0; i < column; i++){\r\n      rows.push(this.renderRow(i));\r\n    }  \r\n    return (\r\n      <div>\r\n        {rows}\r\n      </div>\r\n    )\r\n    \r\n  }\r\n}\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        history: [{\r\n          squares: Array(column*row).fill(null),\r\n        }],\r\n        stepNumber: 0,\r\n        xIsNext: true\r\n      }\r\n    }\r\n\r\n    handleClick(i) {\r\n      \r\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n      const current = history[history.length - 1];\r\n      const squares = current.squares.slice();\r\n      var locations = []\r\n      for (let i=0; i < row*column; i++)\r\n      {\r\n        let obj = [Math.floor(i/row), i%row]\r\n        locations.push(obj);\r\n      }\r\n      \r\n      if (calculateWinner(squares) || squares[i]) {\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n      this.setState({\r\n        history: history.concat([{\r\n            squares: squares,\r\n            location: locations[i]\r\n        }]),\r\n        stepNumber: history.length,\r\n        xIsNext: !this.state.xIsNext,\r\n        isAscending: false,\r\n      });\r\n    }\r\n\r\n    jumpTo(step) {\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0,\r\n      });\r\n    }\r\n\r\n    // Set tinh trang sap xep history\r\n    sortHistory()\r\n    {\r\n      this.setState({\r\n        isAscending: !this.state.isAscending\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const history = this.state.history;\r\n      const current = history[this.state.stepNumber];\r\n      const winner = calculateWinner(current.squares);  \r\n\r\n      const moves = history.map((step, move) => {\r\n        const desc = move ? 'Go to move #' + move + \" Location: (\" + history[move].location + \")\" : 'Go to game start';\r\n          return (\r\n            <li key={move}>\r\n              <button onClick = {() => this.jumpTo(move)}>\r\n              {move === this.state.stepNumber ? <b>{desc}</b> : desc}\r\n              </button>\r\n            </li>\r\n          );\r\n      });\r\n\r\n      let status;\r\n\r\n      // kiem tra tinh trang dang trong game hay het game(win/draw)\r\n\r\n      if (winner) {\r\n        status = 'Winner: ' + winner.winner;\r\n      }\r\n      else if (!current.squares.includes(null)) {\r\n        status = 'Draw';\r\n        //alert('Draw');\r\n      } \r\n      else {\r\n        status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n      }\r\n\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n              winSquares = {winner ? winner.line: []}\r\n              squares = {current.squares}\r\n              onClick = {i => this.handleClick(i)}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <button onClick = {() => this.sortHistory()}>\r\n              Sort: {this.state.isAscending ? \"Ascending\" : \"Descending\"}\r\n            </button>\r\n            <ol>{this.state.isAscending ? moves.reverse() : moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n\r\n  function calculateWinner(squares) {\r\n\r\n    for (let i = 0; i < row*column; i++)\r\n    {\r\n\r\n      // Kiem tra duong ngang\r\n      if (squares[i] \r\n        && squares[i] === squares[i+1]\r\n        && squares[i] === squares[i+2]\r\n        && squares[i] === squares[i+3]\r\n        && squares[i] === squares[i+4]\r\n        )\r\n        {\r\n          return {winner: squares[i], line: [i, i+1, i+2, i+3, i+4] };\r\n        }\r\n      \r\n      // Kiem tra duong doc\r\n      if (squares[i] \r\n        && squares[i] === squares[i+20]\r\n        && squares[i] === squares[i+40]\r\n        && squares[i] === squares[i+60]\r\n        && squares[i] === squares[i+80]\r\n        )\r\n        {\r\n          return {winner: squares[i], line: [i, i+20, i+40, i+60, i+80] };\r\n        }\r\n\r\n      // Kiem tra duong cheo phai\r\n      if (squares[i] \r\n        && squares[i] === squares[i+21]\r\n        && squares[i] === squares[i+42]\r\n        && squares[i] === squares[i+63]\r\n        && squares[i] === squares[i+84]\r\n        )\r\n        {\r\n          return {winner: squares[i], line: [i, i+21, i+42, i+63, i+84] };\r\n        }\r\n      \r\n      // Kiem tra duong cheo trai\r\n      if (squares[i] \r\n        && squares[i] === squares[i+19]\r\n        && squares[i] === squares[i+38]\r\n        && squares[i] === squares[i+57]\r\n        && squares[i] === squares[i+76]\r\n        )\r\n        {\r\n          return {winner: squares[i], line: [i, i+19, i+38, i+57, i+76] };\r\n        }\r\n    }\r\n   \r\n    return null;\r\n  }"],"sourceRoot":""}